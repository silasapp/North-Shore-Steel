@using Nop.Services.Customers
@using Nop.Core
@using Nop.Core.Infrastructure
@{
    // check if user is guest
    var customer = EngineContext.Current.Resolve<IWorkContext>().CurrentCustomer;
    var isGuestCustomer = EngineContext.Current.Resolve<ICustomerService>().IsGuest(customer);
}

<div class="header">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderBefore })
    @if (!isGuestCustomer)
    {
        <div class="header-upper">
            <div class="header-selectors-wrapper">
                @await Component.InvokeAsync("TaxTypeSelector")
                @await Component.InvokeAsync("CurrencySelector")
                @await Component.InvokeAsync("LanguageSelector")
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderSelectors })
            </div>
            <div class="header-links-wrapper">
                @await Component.InvokeAsync("HeaderLinks")
                @await Component.InvokeAsync("FlyoutShoppingCart")
            </div>
        </div>
    }

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMiddle })
    <div class="header-lower">
        <div class="header-logo">
            @await Component.InvokeAsync("Logo")
        </div>
        @if (!isGuestCustomer)
        {
    <div class="search-box store-search-box">
        @await Component.InvokeAsync("CustomSearchBox")
    </div>
        }

    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderAfter })
</div>
