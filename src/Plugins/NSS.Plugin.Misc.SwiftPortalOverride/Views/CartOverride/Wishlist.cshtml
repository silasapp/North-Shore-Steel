@using Nop.Web.Models.ShoppingCart
@model WishlistModel
@using Nop.Core
@using Nop.Web.Framework.Themes
@using Nop.Services.Catalog
@using Nop.Services.Common
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using NSS.Plugin.Misc.SwiftPortalOverride
@using NSS.Plugin.Misc.SwiftCore.Services
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject IThemeContext themeContext
@inject IProductService productService
@inject IGenericAttributeService genericAttributeService
@inject IProductAttributeService productAttributeService
@inject IShapeService shapeService
@using Syncfusion.EJ2
@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@using Newtonsoft.Json.Serialization
@using Newtonsoft.Json
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    //page class
    Html.AppendPageCssClassParts("html-wishlist-page");
    Html.AddCssFileParts("~/Plugins/Misc.SwiftPortalOverride/Content/catalog.css");
}

@{
    var themeName = themeContext.WorkingThemeName;
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var compIdCookieKey = string.Format(SwiftPortalOverrideDefaults.ERPCompanyCookieKey, workContext.CurrentCustomer.Id);
    var eRPCompanyId = genericAttributeService.GetAttribute<string>(workContext.CurrentCustomer, compIdCookieKey);
    var eRPCompanyIdExist = false;
    eRPCompanyIdExist = !string.IsNullOrEmpty(eRPCompanyId) && true;
}

<style>
    .hover-icon {
        margin-right: 0.5rem;
    }

    .nss-btn-default {
        color: white !important;
        background-color: #1899E1 !important;
    }

    .table td {
        border-top-width: 0px !important;
    }
</style>

<div id="wishlist" class="page wishlist-page">
    <div class="page-title">

        @if (Model.IsEditable)
        {
            <h1>FAVORITE ITEMS</h1>
        }
        else
        {
            <h1>Favorite Items of @Model.CustomerFullname</h1>
        }

    </div>
    <div class="page-body">
        <div>
            @if (Model.Items.Count > 0)
            {
                <div class="wishlist-content">
                    @if (Model.Warnings.Count > 0)
                    {
                        <div class="message-error">
                            <ul>
                                @foreach (var warning in Model.Warnings)
                                {
                                    <li>@warning</li>
                                }
                            </ul>
                        </div>
                    }
                    <form asp-route="Wishlist" method="post">
                        <div v-if="!isMobile" class="responsive-table-container tab-content mb-5" id=pills-tabContent>
                            <div class="tab-pane fade show active" id=pills-home role=tabpanel aria-labelledby=pills-home-tab>
                                <table class="table table-striped nss-table">
                                    <thead class=thead-default>
                                        <tr>
                                            <td scope=col class="product">Description</td>
                                            <td scope=col class="quantity text-center">Qty.</td>
                                            <td scope=col class="text-center" style="width: 12rem"></td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Items)
                                        {
                                            var product = productService.GetProductById(item.ProductId);
                                            var attr = genericAttributeService.GetAttributesForEntity(item.ProductId, nameof(Product));
                                            var mtr = attr.FirstOrDefault(x => x.Key == "mtr")?.Value;
                                            if (int.TryParse(attr.FirstOrDefault(x => x.Key == "shapeId")?.Value, out int shapeId))
                                            {
                                                var shape = shapeService.GetShapeById(shapeId);
                                            }
                                            var itemId = item.Id;
                                            string isSerialized = attr.FirstOrDefault(x => x.Key == "serialized")?.Value;



                                            <tr>
                                                <td class="product align-middle">
                                                    @item.ProductName

                                                    @if (item.Warnings.Count > 0)
                                                    {
                                                        <div class="text-danger">
                                                            <ul>
                                                                @foreach (var warning in item.Warnings)
                                                                {
                                                                    <li>@warning</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    }
                                                </td>
                                                <td class="quantity text-center">
                                                    @if (Model.IsEditable)
                                                    {
                                                        if (item.AllowedQuantities.Count > 0)
                                                        {
                                                            <select name="itemquantity@(item.Id)" class="qty-dropdown">
                                                                @foreach (var qty in item.AllowedQuantities)
                                                                {
                                                                    <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                                }
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            @if (isSerialized?.ToLower() == "true")
                                                            {
                                                                <label style="width: 100px; height: 30px" name="itemquantity@(item.Id)" id="itemquantity@(item.ProductId)" type="number" for="" aria-label="@T("ShoppingCart.Quantity")">1</label>
                                                            }
                                                            else
                                                            {
                                                                <input name="itemquantity@(item.Id)" type="text" width="20" id="itemquantity@(item.ProductId)" value="" min="1" class="qty-input" aria-label="@T("ShoppingCart.Quantity")" oninput="this.value = !!this.value && Math.abs(this.value)>= 0 ? Math.abs(this.value) : null" />
                                                            }

                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="product-quantity">@item.Quantity</span>
                                                    }
                                                </td>
                                                <td style="justify-content: flex-end;" class="d-flex align-items-center w-100">


                                                    @if (!string.IsNullOrEmpty(mtr))
                                                    {
                                                        <a class="table-action-button" style="text-decoration:none" href="@mtr" target="_blank">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="hover-icon mx-1">
                                                                <title>View MTRs</title>
                                                                <path d="M0,0H24V24H0Z" fill="rgba(0, 0, 0, 0)" />
                                                                <path d="M3.667,3.333v15H17V20H3.667A1.672,1.672,0,0,1,2,18.333v-15H3.667m9.167,2.5h4.583L12.833,1.25V5.833M7,0h6.667l5,5V15A1.661,1.661,0,0,1,17,16.667H7A1.666,1.666,0,0,1,5.333,15V1.667A1.661,1.661,0,0,1,7,0m7.5,13.333V11.667H7v1.667h7.5M17,10V8.333H7V10Z" transform="translate(2 2)" />
                                                            </svg>
                                                        </a>
                                                    }
                                                    <div class="table-action-button">
                                                        <label class="mb-0">
                                                            <span style="cursor:pointer">
                                                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="remove-favorite-icon mx-1" aria-hidden="true" focusable="false" width="24" height="24"
                                                                     style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);"
                                                                     preserveAspectRatio="xMidYMid meet" viewBox="0 0 1024 1024">
                                                                    <title>Remove favorite</title>
                                                                    <path d="M923 283.6a260.04 260.04 0 0 0-56.9-82.8a264.4 264.4 0 0 0-84-55.5A265.34 265.34 0 0 0 679.7 125c-49.3 0-97.4 13.5-139.2 39c-10 6.1-19.5 12.8-28.5 20.1c-9-7.3-18.5-14-28.5-20.1c-41.8-25.5-89.9-39-139.2-39c-35.5 0-69.9 6.8-102.4 20.3c-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 0 0-56.9 82.8c-13.9 32.3-21 66.6-21 101.9c0 33.3 6.8 68 20.3 103.3c11.3 29.5 27.5 60.1 48.2 91c32.8 48.9 77.9 99.9 133.9 151.6c92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3c56-51.7 101.1-102.7 133.9-151.6c20.7-30.9 37-61.5 48.2-91c13.5-35.3 20.3-70 20.3-103.3c.1-35.3-7-69.6-20.9-101.9z" />
                                                                </svg>
                                                            </span>
                                                            <input type="checkbox" hidden name="removefromcart" onclick="removeFromFavorites()" value="@(item.Id)">
                                                        </label>
                                                    </div>
                                                    @if (eRPCompanyIdExist)
                                                    {
                                                        <button onclick="getInputQuantity(@item.ProductId, @shoppingCartTypeId);" style="border: none;background-color: #1899E1;color:#ffffff;display: flex;align-items: center;padding: 5px 10px;margin-left: 5px;">
                                                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="hover-icon mx-1" width="24" height="24"
                                                                 preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"
                                                                 style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);">
                                                                <title>Add to cart</title>
                                                                <path style="fill: #ffffff;" d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2s-.9-2-2-2zM1 2v2h2l3.6 7.59l-1.35 2.45c-.16.28-.25.61-.25.96c0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12l.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1.003 1.003 0 0 0 20 4H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2s2-.9 2-2s-.9-2-2-2z" />
                                                                <rect x="0" y="0" width="24" height="24" fill="rgba(0, 0, 0, 0)" />
                                                            </svg>
                                                            Add to cart
                                                        </button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div v-if="isMobile">
                            @foreach (var item in Model.Items)
                            {
                                var product = productService.GetProductById(item.ProductId);
                                var attr = genericAttributeService.GetAttributesForEntity(item.ProductId, nameof(Product));
                                var mtr = attr.FirstOrDefault(x => x.Key == "mtr")?.Value;
                                if (int.TryParse(attr.FirstOrDefault(x => x.Key == "shapeId")?.Value, out int shapeId))
                                {
                                    var shape = shapeService.GetShapeById(shapeId);
                                }
                                var itemId = item.Id;
                                string isSerialized = attr.FirstOrDefault(x => x.Key == "serialized")?.Value;


                                <div class="product-sm d-flex flex-column align-items-start mb-2">
                                    <label class="h2-primary my-2">@item.ProductName</label>
                                    <div class="d-flex flex-row justify-content-between w-100 my-3">
                                        <div class="d-flex flex-row align-items-center">
                                            <div class="table-action-button">
                                                <label class="mb-0">
                                                    <span style="cursor:pointer">
                                                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="remove-favorite-icon mx-1" aria-hidden="true" focusable="false" width="24" height="24"
                                                             style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);"
                                                             preserveAspectRatio="xMidYMid meet" viewBox="0 0 1024 1024">
                                                            <title>Remove favorite</title>
                                                            <path d="M923 283.6a260.04 260.04 0 0 0-56.9-82.8a264.4 264.4 0 0 0-84-55.5A265.34 265.34 0 0 0 679.7 125c-49.3 0-97.4 13.5-139.2 39c-10 6.1-19.5 12.8-28.5 20.1c-9-7.3-18.5-14-28.5-20.1c-41.8-25.5-89.9-39-139.2-39c-35.5 0-69.9 6.8-102.4 20.3c-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 0 0-56.9 82.8c-13.9 32.3-21 66.6-21 101.9c0 33.3 6.8 68 20.3 103.3c11.3 29.5 27.5 60.1 48.2 91c32.8 48.9 77.9 99.9 133.9 151.6c92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3c56-51.7 101.1-102.7 133.9-151.6c20.7-30.9 37-61.5 48.2-91c13.5-35.3 20.3-70 20.3-103.3c.1-35.3-7-69.6-20.9-101.9z" />
                                                        </svg>


                                                    </span>
                                                    <input type="checkbox" hidden name="removefromcart" onclick="removeFromFavorites()" value="@(item.Id)">
                                                </label>
                                            </div>



                                            @if (!string.IsNullOrEmpty(mtr))
                                            {
                                                <a class="table-action-button" style="text-decoration: none" href="@mtr" target="_blank">
                                                    <img class="product-action-sm" src="Themes/SwiftPortal/Content/assets/icn-mt-report.svg" title="mtr report" width="24" height="24" alt="">
                                                </a>
                                            }

                                        </div>
                                        <div class="d-flex flex-row">
                                            <button type="button" class="btn-sm-step" v-on:click="handleDecrementQuantity(@(item.ProductId))">-</button>
                                            <input name="itemquantity@(item.Id)" type="number" width="20" id="itemquantity@(item.ProductId)" value="@(item.Quantity)" min="1" class="form-control-sm" aria-label="@T("ShoppingCart.Quantity")" oninput="this.value = !!this.value && Math.abs(this.value)>= 0 ? Math.abs(this.value) : null" />
                                            <button type="button" class="btn-sm-step" v-on:click="handleIncrementQuantity(@(item.ProductId))">+</button>
                                        </div>
                                    </div>

                                    @if (eRPCompanyIdExist)
                                    {
                                        <button type="button" class="btn-sm-add-to-cart" onclick="getInputQuantity(@item.ProductId, @shoppingCartTypeId);">
                                            <img src="Themes/SwiftPortal/Content/assets/shopping-cart.svg" class="product-action-sm" width="24" height="24" alt="">
                                            Add to cart
                                        </button>
                                    }

                                </div>
                            }
                        </div>
                        <div class="buttons">
                            @if (Model.IsEditable)
                            {
                                <input type="submit" hidden name="updatecart" id="updatecart" value="@T("Wishlist.UpdateCart")" style="opacity: 0" class="button-2 update-wishlist-button invisible" />
                            }
                        </div>
                    </form>
                </div>
            }
            else
            {
                <div class="tab-content p-0">
                    <div class="no-data mx-4 my-4">
                        @T("Wishlist.CartIsEmpty")
                    </div>
                </div>
            }

            <a href="/catalog">
                <div class="discount-block" style="margin-bottom: 70px;" alt="">
                    <img v-if="!isMobile" srcset="~/Themes/@(themeName)/Content/assets/discounts-banner@2x.png 2x, /Themes/@(themeName)/Content/assets/discounts-banner.png 1x" src="~/Themes/@(themeName)/Content/assets/discounts-banner.png" alt="discounts-banner">
                    <img v-if="isMobile" src="~/Themes/@(themeName)/Content/assets/bg-discount-mobile_new.png" alt="">
                </div>
            </a>
        </div>
    </div>
</div>

@functions{
    string Serialize(object input)
    {
        return JsonConvert.SerializeObject(input, new JsonSerializerSettings
        {
            ContractResolver = new DefaultContractResolver { NamingStrategy = new CamelCaseNamingStrategy() },
            Formatting = Formatting.None
        });
    }
}

<script>
    function removeFromFavorites() {
        $('#custom-loading').show();
        $("#updatecart").click();
    }
</script>

<script>

     var items = @Html.Raw(Serialize(Model.Items));
    var pageModel = @Html.Raw(Serialize(Model));
    var modalVm = new Vue({
        el: '#wishlist',
        data: {
            items,
            pageModel,
            isEditable: pageModel.isEditable,
            quantity: 0,
            quantityId: 0,
            productId: null,
            window: {
                width: 0,
                height: 0,
            },
        },
        created: function () {
            window.addEventListener("resize", this.handleResize);
            this.handleResize();
        },
        destroyed: function () {
            window.removeEventListener("resize", this.handleResize);
        },
        mounted: function () {
        },
        computed: {
            isMobile: function () {
                return this.window.width <= 767.98;
            },
        },
        methods: {
            handleResize: function () {
                this.window.width = window.innerWidth;
                this.window.height = window.innerHeight;
            },

        },
    });
    function getInputQuantity(itemId, cartId) {
        event.preventDefault();
        let qty = $('#itemquantity' + itemId).val();
        let seQty = $('#itemquantity' + itemId).text();
        if (seQty === "" && !qty) { displayBarNotification("Please enter quantity", 'error', 0); return; }
        if (!qty)
            qty = 1;
        let link = `/CartOverride/CustomAddProductToCart_Catalog?productId=${itemId}&shoppingCartTypeId=${cartId}&quantity=${qty}`
        $('#qty' + itemId).val("");
        AjaxCart.addproducttocart_catalog(link);
    }

</script>

<ejs-scripts></ejs-scripts>