@using Nop.Web.Models.Order
@using Nop.Web.Models.Customer
@inject IThemeContext themeContext
@using Nop.Web.Framework.Themes

@model CustomerOrderListModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts("Orders");
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}
@{ var themeName = themeContext.WorkingThemeName; }
<div id="orders" class="page orders-page">
    <div class=page-body>
        <div class="orders-search-block" id=ordersTableBlock role=tabpanel
             aria-labelledby=ordersTableBlock>
            <div>
                <div class="orders-title">SEARCH ORDERS</div>
                <div class="orders-export" v-on:click="isSearchOpen = !isSearchOpen;">
                    <img class="collapse-icon" v-bind:class="{'down': isSearchOpen}" id="collapseIcon"
                         src="~/Themes/@(themeName)/Content/assets/icn-expand.svg" alt="" />
                </div>
            </div>

            <div v-show="isSearchOpen" class="row">
                <div class="col-md-3 d-flex flex-column">
                    <label for=orderFromDate>Order Dates</label>
                    <div class="input-with-icon">
                        <input class=nss-form-control type="text" onfocus="(this.type='date')" onblur="(this.type='text')"
                               data-val=true placeholder="From">
                        <img src="~/Themes/@(themeName)/Content/assets/icn-cal-range.svg" alt="">
                    </div>
                </div>
                <div class="col-md-3 d-flex flex-column">
                    <label for=orderToDate> &nbsp;</label>
                    <div class="input-with-icon">
                        <input class=nss-form-control type="date" data-val=true placeholder="To" />
                        <img src="~/Themes/@(themeName)/Content/assets/icn-cal-range.svg" alt="">
                    </div>
                </div>
                <div class="col-md-3 d-flex flex-column">
                    <label for=purchaseOrder>Purchase Order #</label>
                    <input class=nss-form-control type=text data-val=true placeholder="Enter...">
                </div>
                <div class="col-md-3 d-flex flex-row-reverse align-items-end">
                    <button class="nss-btn-default">Search</button>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column p-4 bg-white">
            <div class="d-flex flex-row justify-content-between mb-3">
                <label class="h2-primary">ORDERS</label>
                <label class="h4-primary"><img src="~/Themes/@(themeName)/Content/assets/icn-download.svg" alt="">Export</label>
            </div>
            <ejs-grid id="Grid" dataSource="@Model.Orders" allowPaging="true" allowFiltering="true">
                <e-grid-filtersettings type="Menu"></e-grid-filtersettings>
                <e-grid-pagesettings pageSize="10" pageSizes="true"></e-grid-pagesettings>
                <e-grid-columns>
                    <e-grid-column headerText="Order #" template="#template" width="60" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="PO" headerText="PO #" width="60" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="TotalWeight" headerText="Weight (lb)" width="70" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="OrderTotal" headerText="Order Amount" width="80" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="CreatedOn" headerText="Order Date" width="90" format="yMd" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="ShippingStatus" headerText="Shipped On" width="80" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="DeliveryDate" headerText="Est. Delivery Date" width="120" allowFiltering="false"></e-grid-column>
                    <e-grid-column field="OrderStatus" headerText="Status" filter="@(new { type="CheckBox"})" width="70"></e-grid-column>
                    <e-grid-column type="checkbox" width="30"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
</div>
@functions{
    @using Newtonsoft.Json.Serialization;
    @using Newtonsoft.Json;

    string Serialize(object input)
    {
        return JsonConvert.SerializeObject(input, new JsonSerializerSettings
        {
            ContractResolver = new DefaultContractResolver { NamingStrategy = new CamelCaseNamingStrategy() },
            Formatting = Formatting.None
        });
    }
}

<script id="template" type="text/x-template">
    <a href="/orders/${Id}">${Id}</a>
</script>

<script>
    var model = @Html.Raw(Serialize(Model));

    const store = {
        state: {
            orders: model.orders,
        },
    };

    var vm = new Vue({
        el: '#orders',
        data: {
            shared: store.state,
            isSearchOpen: true,
        },
        mounted: function () {

        },
        methods: {

        },
    });
</script>
<ejs-scripts></ejs-scripts>