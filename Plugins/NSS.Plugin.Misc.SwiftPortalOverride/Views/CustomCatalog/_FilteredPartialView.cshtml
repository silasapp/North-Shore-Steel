@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@model CatalogModel

<div id="_prtialview">
    @if (Model.Products != null)
    {

        <table class="table table-bordered catalog-table table-striped" id="catalogTable" onload="sortTable(0)">
            <thead>
                <tr>
                    @foreach (var item in Model.Products)
                    {
                        @foreach (var it in item.Shape.Atttributes)
                        {
                            <th class="sortable" scope="col" onclick="sortTable(0)">@it.DisplayName</th>
                            @*<th class="sortable" scope="col" onclick="sortTable(1)">Description </th>
                                <th class="sortable" scope="col" onclick="sortTable(2)">Grade </th>
                                <th class="sortable" scope="col" onclick="sortTable(3)">Thickness (in)</th>
                                <th class="sortable" scope="col" onclick="sortTable(4)">Dimensions (in)</th>
                                <th class="sortable" scope="col" onclick="sortTable(5)">Weight(Ib)/ft</th>
                            *@
                        }
                        <th class="sortable" scope="col" onclick="sortTable(6)">Quantity</th>
                        break;
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Products)
                {
                    <tr>
                        @foreach (var it in item.Shape.Atttributes)
                        {
                            <td>@item.ProductCustomAttributes.FirstOrDefault(x => x.Key == @it.Code)?.Value</td>
                            @*<td>@item.ProductCustomAttributes.FirstOrDefault(x => x.Key == "itemName")?.Value</td>
                                <td>@item.ProductCustomAttributes.FirstOrDefault(x => x.Key == "grade")?.Value</td>
                                <td>@item.ProductCustomAttributes.FirstOrDefault(x => x.Key == "displayThickness")?.Value</td>
                                <td>@item.ProductCustomAttributes.FirstOrDefault(x => x.Key == "dimensions")?.Value</td>
                                <td>@item.ProductCustomAttributes.FirstOrDefault(x => x.Key == "displayWeightPerFoot")?.Value</td>*@
                        }
                        <td>
                            <input style="width: 60px" type="number" name="quantity" id="">
                        </td>
                        <td style="text-align:center">
                            <button class="table-action-button">
                                <img src="Themes/SwiftPortal/Content/assets/invoice.svg" width="20" height="20" alt="">
                            </button>
                            <button class="table-action-button">
                                <img src="Themes/SwiftPortal/Content/assets/saw-blade.svg" width="20" height="20" alt="">
                            </button>
                            <button class="table-action-button">
                                <img src="Themes/SwiftPortal/Content/assets/shopping-cart.svg" width="20" height="20" alt="">
                            </button>
                            <button class="table-action-button">
                                <img src="Themes/SwiftPortal/Content/assets/heart.svg" width="20" height="20" alt="">
                            </button>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    }


</div>