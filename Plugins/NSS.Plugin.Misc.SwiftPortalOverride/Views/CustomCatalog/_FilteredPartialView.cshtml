@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns

@model CatalogModel
@using Nop.Core.Domain.Orders
@{
    //prepare "Add to cart" AJAX link
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;

    var headerColumns = new List<NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute>();
}


@{List<object> ObjectData = new List<object>(); }


@if (Model.Products != null && Model.Products.Count > 0)
{

    if (Model.FilterParams.ShapeIds.Count > 0)
    {
        headerColumns = Model.Products.FirstOrDefault().Shape.Atttributes.ToList();

    }
    else
    {
        headerColumns = new List<NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute>()
{
            new NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute
            {
                Code = "itemNo",
                DisplayName = "Item #"
            },
            new NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute
            {
                Code = "itemName",
                DisplayName = "Description"
            },
            new NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute
            {
                Code = "displayHeight",
                DisplayName = "Height (in)"
            },
            new NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute
            {
                Code = "displayLength",
                DisplayName = "Length (ft)"
            },
            new NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute
            {
                Code = "weightPerFoot",
                DisplayName = "Weight (lb)/ ft"
            },
            new NSS.Plugin.Misc.SwiftCore.Domain.Shapes.ShapeAttribute
            {
                Code = "quantity",
                DisplayName = "Qty"
            }
        };

    }

    @foreach (var item in Model.Products)
    {
        var productRowData = new Dictionary<string, string>();

        @foreach (var it in headerColumns)
        {
            productRowData.Add(it.DisplayName, item.ProductCustomAttributes.FirstOrDefault(x => x.Key == it.Code)?.Value);

        }

        productRowData.Add("_itemId", item.Id.ToString());
        productRowData.Add("_mtr", item.ProductCustomAttributes.FirstOrDefault(x => x.Key == "mtr")?.Value);
        productRowData.Add("_sawOption", item.Shape.SawOption.ToString());
        productRowData.Add("_addtocartlink", Url.Action("CustomAddProductToCart_Catalog", "CartOverride", new { productId = item.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity }));
        productRowData.Add("_addtowishlistlink", Url.Action("CustomAddProductToCart_Catalog", "CartOverride", new { productId = item.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity }));


        ObjectData.Add(productRowData);
    }


    <div id="_prtialview">
        <div class="control-section">
            @Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ObjectData).Columns(col =>
       {
           foreach (var it in headerColumns)
           {
               if (!it.DisplayName.StartsWith("_"))
               {
                    col.Field(it.DisplayName).Width("150").Add();
               }
           }
           col.Field("Quantity").HeaderText("Quantity").Template("#quantity-template").Width("150").AllowFiltering(false).Add();

           col.Field("Options").Template("#options-template").Width("150").AllowFiltering(false).Add();

       }).AllowPaging(true).AllowSorting(true).AllowFiltering(true).PageSettings(page => page.PageSize(10)).Render()

        </div>

    </div>
}

<script id="quantity-template" type="text/x-template">
    <input style="width: 60px" type="number" name="quantity" id="">
</script>


<script id="options-template" type="text/x-template">
    ${if(_mtr)}
    <a class="table-action-button" style="text-decoration:none" href="${_mtr}" target="_blank">
        <img src="Themes/SwiftPortal/Content/assets/invoice.svg" width="20" height="20" alt="">
    </a>
    ${/if}

    ${if(_sawOption == "True")}
    <button class="table-action-button">
        <img src="Themes/SwiftPortal/Content/assets/saw-blade.svg" width="20" height="20" alt="">
    </button>
    ${/if}

    <button class="table-action-button" onclick="AjaxCart.addproducttocart_catalog(" ${_addtocartlink}");return false;">
        <img src="Themes/SwiftPortal/Content/assets/shopping-cart.svg" width="20" height="20" alt="">
    </button>
    <button class="table-action-button" onclick="AjaxCart.addproducttocart_catalog(" ${_addtowishlistlink}");return false;">
        <img src="Themes/SwiftPortal/Content/assets/heart.svg" width="20" height="20" alt="">
    </button>
</script>

<ejs-scripts></ejs-scripts>
