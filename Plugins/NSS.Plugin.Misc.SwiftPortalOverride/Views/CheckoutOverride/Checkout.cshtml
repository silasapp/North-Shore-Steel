@using NSS.Plugin.Misc.SwiftCore.Helpers
@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@using Nop.Core.Domain.Catalog
@using Nop.Services.Common
@using Nop.Services.Catalog
@inject IGenericAttributeService genericAttributeService
@inject IProductService productService

@model CheckoutCompleteOverrideModel
@{
    Layout = "_ColumnsOne";
    var themeName = Constants.ThemeName;

    //page class
    Html.AppendPageCssClassParts("html-home-page");
    Html.AddCssFileParts("~/Plugins/Misc.SwiftPortalOverride/Content/checkout.css");
}

@{
    @using Newtonsoft.Json.Serialization;
    @using Newtonsoft.Json;

    var contractResolver = new DefaultContractResolver { NamingStrategy = new CamelCaseNamingStrategy() };
    var shippingAddresses = JsonConvert.SerializeObject(Model.ShippingAddressModel.ExistingAddresses, new JsonSerializerSettings
    {
        ContractResolver = contractResolver,
        Formatting = Formatting.None
    });
}

<div id="checkout" class="page home-page">
    <div class="page-body">
        <h1 class="heading1" style="text-align: center;margin: 15px 0;">CHECKOUT</h1>
        <hr style="height: 2px; color: #000; opacity: 0.5;margin-bottom: 30px;">
        <div class="row px-5" style="justify-content: space-between;">
            <div class="col-9">
                <div class="card card-mod">
                    <label class="h5 text-primary font-weight-bold mb-4">ORDER INFORMATION</label>
                    <div class="d-flex flex-row justify-content-between mt-2">
                        <div class="d-flex flex-column">
                            <label for="purchaseOrder" class="fs-13 text-black">Purchase Order #</label>
                            <label id="purchaseOrder" class="p-2 text-black">3333</label>
                        </div>
                        <div class="d-flex flex-column ml-5">
                            <label for="deliveryDate" class="fs-13 text-black">Estimated Delivery Date</label>
                            <label id="deliveryDate" class="p-2 text-black">TBD</label>
                        </div>
                        <button class="h6 text-primary mr-5" onclick="setLocation('@Url.Action("Cart", "CartOverride")')">
                            <img src="Themes/@themeName/Content/assets/close.svg" alt="" style="margin-right: 5px;">
                            Edit Shopping Cart
                        </button>
                    </div>
                </div>
                <div class="card card-mod">
                    <h1 class="h5 text-primary font-weight-bold mb-4">SHIPPING OR PICKUP</h1>
                    <div class="d-flex flex-row justify-content-center mb-3">
                        <button class="fs-14 shipping-tab mr-2" :class="{'active': isDelivery}" v-on:click="isDelivery = true;">
                            Delivery
                        </button>
                        <button class="font14 shipping-tab" :class="{'active': !isDelivery}" v-on:click="isDelivery = false;">
                            Pickup
                        </button>
                    </div>

                    <div class="d-flex flex-column mb-3" v-if="isDelivery">
                        <label for="shippingAddress" class="fs-14 text-black mb-1">Shipping Address</label>
                        <div class="d-flex flex-row">
                            <select type="text" class="bg-accent text-black w-75 px-2 py-2"
                                    name="shipping-address" id="shippingAddress">
                                <option value="" v-for="address in shippingAddresses">
                                    {{ address.company }}, {{ address.address1 }}, {{ address.city }}, {{ address.stateProvinceName }} {{ address.zipPostalCode }}
                                </option>
                            </select>
                            <button class="fs-14 w-25 text-primary justify-content-end text-decoration-underline">
                                Enter a new shiping address
                            </button>
                        </div>
                    </div>
                    <div class="d-flex flex-column mb-3" v-if="!isDelivery">
                        <label for="shippingAddress" class="fs-14 text-black mb-1">North Shore Steel Pickup Location</label>
                        <div class="d-flex flex-row">
                            <select type="text" class="bg-accent text-black w-100 px-2 py-2" name="shipping-address" id="shippingAddress">
                                @foreach (var item in Model.ShippingAddressModel.ExistingAddresses)
                                {
                                    <option value="">@item.Company, @item.Address1, @item.City, @item.StateProvinceName @item.ZipPostalCode</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="d-flex flex-column">
                        <h1 class="h5 text-primary font-weight-bold mb-2">NEW ADDRESS</h1>
                        <div class="d-flex flex-row mt-3">
                            <div class="d-flex flex-column w-50 mr-2">
                                <label class="fs-14 text-black mb-1">Address Line 1</label>
                                <input type="text" class="" v-model="addressLine1" placeholder="Ex: 1234 Main St." />
                            </div>
                            <div class="d-flex flex-column w-50 ml-2">
                                <label class="fs-14 text-black mb-1">Address Line 2</label>
                                <input type="text" class="" v-model="addressLine2" placeholder="Ex: Ste. 800" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card card-mod">
                    <h1 class="heading2">PAYMENT METHOD</h1>
                    <div style="display: flex; justify-content: space-between; margin-bottom: 20px;">
                        <button class="font20 payment-type-btn active">
                            <img src="Themes/@themeName/Content/assets/shopping-cart.svg" alt="">
                            <div style="margin-left: 10px;">
                                <p style="margin: 0;text-align: left;line-height: 1;">Credit/Debit</p>
                                <p class="font12" style="margin: 5px 0;text-align: left;">Pay with credit/debit card</p>
                            </div>
                        </button>
                        <button class="font20 payment-type-btn">
                            <img src="Themes/@themeName/Content/assets/saw-blade.svg" alt="">
                            <div style="margin-left: 10px;">
                                <p style="margin: 0;text-align: left;line-height: 1;">Paypal</p>
                                <p class="font12" style="margin: 5px 0;text-align: left;">Pay with PayPal account</p>
                            </div>
                        </button>
                        <button class="font20 payment-type-btn">
                            <img src="Themes/@themeName/Content/assets/saw-blade.svg" alt="">
                            <div style="margin-left: 10px;">
                                <p style="margin: 0;text-align: left;line-height: 1;">Line of Credit</p>
                                <p class="font12" style="margin: 5px 0;text-align: left;">Balance: $2,076.25</p>
                            </div>
                        </button>
                    </div>
                    <div style="display: flex;justify-content: space-between;">
                        <div style="display: inline-grid; flex-basis: 65%;">
                            <label for="shippingAddress" class="font12">Saved Credit/Debit Cards</label>
                            <select type="text" class="font14" style="color: rgb(7, 7, 107);" name="shipping-address"
                                    id="shippingAddress">
                                <option value="">
                                    VISA 4321
                                </option>
                            </select>
                        </div>
                        <a href="" class="font12"
                           style="display: flex;align-items: flex-end;flex-basis: 30%;margin: 0;">
                            Enter a new billing address
                        </a>
                    </div>
                    <div style="display: flex;align-items: center;">
                        <input type="checkbox" name="" id="">
                        <label for="" class="font12" style="margin: 10px 5px;">Same as shipping address</label>
                    </div>
                </div>
                <h1 class="heading1" style="text-align: center;margin: 15px 0;">ORDER SUMMARY</h1>
                <hr style="color: rgb(7, 7, 107); opacity: 0.5; margin-bottom: 20px;">
                <table class="table table-bordered catalog-table font12" id="catalogTable" onload="sortTable(0)">
                    <thead>
                        <tr>
                            <th scope="col">Item #</th>
                            <th scope="col">Description</th>
                            <th scope="col">Customer Part #</th>
                            <th scope="col">Unit Price</th>
                            <th scope="col">Total Price</th>
                            <th scope="col">Total Weight (lbs)</th>
                            <th scope="col">Qty.</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ShoppingCartModel.Items)
                        {
                            var product = productService.GetProductById(item.ProductId);
                            var attr = genericAttributeService.GetAttributesForEntity(item.ProductId, nameof(Product));

                            var itemTagNo = attr.FirstOrDefault(x => x.Key == "itemTagNo")?.Value;
                            var itemNo = attr.FirstOrDefault(x => x.Key == "itemNo")?.Value;
                            string serialized = attr.FirstOrDefault(x => x.Key == "serialized")?.Value;
                            var iNo = serialized == "True" ? itemTagNo : itemNo;
                            var itemWeight = product.Weight;
                            var weight = Decimal.ToDouble(itemWeight);
                            var totalWeight = (weight * item.Quantity);

                            <tr>
                                <td>@iNo</td>
                                <td>@item.ProductName</td>
                                <td>P-12345</td>
                                <td>@item.UnitPrice / CW</td>
                                <td>@item.SubTotal</td>
                                <td>@totalWeight</td>
                                <td>@item.Quantity</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <div class="col-3">
                <div class="card card-mod">
                    <h2 class="heading3" style="text-align: center;">ORDER INFORMATION</h2>
                    <div class="order-summary">
                        <div class="price-summary">
                            <p class="title">Sub-Total</p>
                            <p class="amount">78.33</p>
                        </div>
                        <div class="price-summary">
                            <p class="title">Shipping</p>
                            <p class="amount">TBD</p>
                        </div>
                        <div class="price-summary">
                            <p class="title">Discount</p>
                            <p class="amount">0.00</p>
                        </div>
                        <div class="price-summary">
                            <p class="discount-tag font12">10% OFF | 10,000lbs</p>
                        </div>
                        <div class="price-summary">
                            <p class="title">Tax</p>
                            <p class="amount">12.00</p>
                        </div>
                        <div class="price-summary">
                            <p class="total">Total</p>
                            <p class="total">$135.33</p>
                        </div>
                    </div>
                </div>
                <div style="display:flex;justify-content: center;">
                    <button class="font14" onclick="setLocation('@Url.Action("Completed")')" style="margin-right:2px;background-color: rgb(68, 89, 145);color: #fff; padding: 5px 15px;">
                        PLACE ORDER
                    </button>
                </div>
            </div>
        </div>

    </div>
</div>
@functions{
    string DoFormat(double myNumber)
    {
        var s = string.Format("{0:0.00}", myNumber);

        return s;
    }
}
<script>
    var shippingAddresses = @Html.Raw(shippingAddresses);
    console.log("addresses: ", shippingAddresses);
    new Vue({
        el: '#checkout',
        data: {
            isDelivery: true,
            shippingAddresses,
            addressLine1: null,
            addressLine2: null,
        },
        mounted: function () {
        },
        methods: {
        },
    });
</script>