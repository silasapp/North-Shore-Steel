@using Nop.Core
@using Nop.Web.Models.Customer
@using NSS.Plugin.Misc.SwiftCore.Helpers
@using NSS.Plugin.Misc.SwiftPortalOverride
@using NSS.Plugin.Misc.SwiftCore.Services
@using Nop.Services.Common
@inject IWorkContext workContext
@inject ICustomerCompanyService customerCompanyService
@inject IGenericAttributeService genericAttributeService
@model CustomerAddressEditModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-address-edit-page");

}

@{
    var compIdCookieKey = string.Format(SwiftPortalOverrideDefaults.ERPCompanyCookieKey, workContext.CurrentCustomer.Id);
    int eRPCompanyId = Convert.ToInt32(genericAttributeService.GetAttribute<string>(workContext.CurrentCustomer, compIdCookieKey));
    bool isBuyer = customerCompanyService.Authorize(workContext.CurrentCustomer.Id, eRPCompanyId, ERPRole.Buyer);
}

@section left
{
    @await Component.InvokeAsync("CustomCustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Addresses, isABuyer = isBuyer })
}
<style>
    .grey-bg {
        background-color: #f6f6f6 !important;
    }

    .color-white {
        color: #ffffff !important;
    }
</style>
<form asp-route="CustomerAddressAdd" method="post">
    <div class="page account-page address-edit-page" id="address-add" v-bind:class="{'text-left': isMobile,'grey-bg':isMobile}">
        <div v-bind:class="{'p-0': isMobile,'grey-bg':isMobile,'page-body': !isMobile}">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            @{
                var dataDictAddress = new ViewDataDictionary(ViewData);
                dataDictAddress.TemplateInfo.HtmlFieldPrefix = "Address";
                @await Html.PartialAsync("_CreateOrUpdateAddress", Model.Address, dataDictAddress)
            }
            <div class="buttons" v-bind:class="{'justify-content-center': isMobile,'text-center': isMobile}">
                <input type="button" class="cancel-button" style="background-color: transparent !important;" onclick="location.href = '/customer/addresses'" value="Cancel" />
                <input type="submit" class="button-1 save-address-button" value="@T("Common.Save")" v-bind:class="{'bg-primary': isMobile,'color-white': isMobile}" />
            </div>
        </div>
    </div>
</form>
<script>
    var vm = new Vue({
        el: '#address-add',
        data: {
            window: {
                width: 0,
                height: 0,
            },
        },
        created: function () {
            window.addEventListener("resize", this.handleResize);
            this.handleResize();
        },
        destroyed: function () {
            window.removeEventListener("resize", this.handleResize);
        },
        computed: {
            isMobile: function () {
                return this.window.width <= 767.98;
            },
        },
        methods: {
            handleResize: function () {
                this.window.width = window.innerWidth;
                this.window.height = window.innerHeight;
            },
        },
    });
</script>
