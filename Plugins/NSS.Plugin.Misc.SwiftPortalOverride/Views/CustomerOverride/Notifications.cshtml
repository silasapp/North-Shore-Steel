@using Nop.Core
@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@using NSS.Plugin.Misc.SwiftCore.Helpers
@using NSS.Plugin.Misc.SwiftPortalOverride
@using NSS.Plugin.Misc.SwiftCore.Services
@using Nop.Services.Common
@using Nop.Web.Framework.Themes
@model Notification
@inject Nop.Core.IWebHelper webHelper
@inject IThemeContext themeContext
@inject IWorkContext workContext
@inject IGenericAttributeService genericAttributeService
@inject ICustomerCompanyService customerCompanyService

@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-customer-info-page");
}

@{
    var compIdCookieKey = string.Format(SwiftPortalOverrideDefaults.ERPCompanyCookieKey, workContext.CurrentCustomer.Id);
    int eRPCompanyId = Common.GetSavedERPCompanyIdFromCookies(Context.Request.Cookies[compIdCookieKey]);
    bool isBuyer = customerCompanyService.Authorize(workContext.CurrentCustomer.Id, eRPCompanyId, ERPRole.Buyer);
}

@{ var themeName = themeContext.WorkingThemeName; }

@section left
{
    @await Component.InvokeAsync("CustomCustomerNavigation", new { selectedTabId = CustomerNavigationEnum.NotificationPreferences, isABuyer = isBuyer })
}


<div id="notifications" class="page account-page customer-info-page">
    <div class="page-body">
        <div class=account-page-card>
            <div class="title">
                <strong>NOTIFICATIONS</strong>
                <a v-on:click="enableAllNotifications" class="notification-all">Enable all notifications</a>
            </div>

            <div class=notification-group>
                <div class="notification-top">
                    <p>My Orders</p>
                    <div class="action-titles">
                        <p>Email</p>
                        <p>SMS</p>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when my order has been confirmed (offline orders only)</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderConfirmedEmail" :value="isMyOrderConfirmedEmail" name="Test">
                                <img v-bind:src="isMyOrderConfirmedEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderConfirmedSms" :value="isMyOrderConfirmedSms" name="Test">
                                <img v-bind:src="isMyOrderConfirmedSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when my order has a scheduled date change</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderScheduledDateEmail" :value="isMyOrderScheduledDateEmail" name="Test">
                                <img v-bind:src="isMyOrderScheduledDateEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderScheduledDateSms" :value="isMyOrderScheduledDateSms" name="Test">
                                <img v-bind:src="isMyOrderScheduledDateSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when my order promise date change </p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderPromiseDateEmail" :value="isMyOrderPromiseDateEmail" name="Test">
                                <img v-bind:src="isMyOrderPromiseDateEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderPromiseDateSms" :value="isMyOrderPromiseDateSms" name="Test">
                                <img v-bind:src="isMyOrderPromiseDateSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when my order is ready</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderReadyEmail" :value="isMyOrderReadyEmail" name="Test">
                                <img v-bind:src="isMyOrderReadyEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderReadySms" :value="isMyOrderReadySms" name="Test">
                                <img v-bind:src="isMyOrderReadySms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when my order is loading</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderLoadingEmail" :value="isMyOrderLoadingEmail" name="Test">
                                <img v-bind:src="isMyOrderLoadingEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderLoadingSms" :value="isMyOrderLoadingSms" name="Test">
                                <img v-bind:src="isMyOrderLoadingSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when my order has shipped</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderShippedEmail" :value="isMyOrderShippedEmail" name="Test">
                                <img v-bind:src="isMyOrderShippedEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isMyOrderShippedSms" :value="isMyOrderShippedSms" name="Test">
                                <img v-bind:src="isMyOrderShippedSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when any order has been confirmed</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isAnyOrderConfirmedEmail" :value="isAnyOrderConfirmedEmail" name="Test">
                                <img v-bind:src="isAnyOrderConfirmedEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isAnyOrderConfirmedSms" :value="isAnyOrderConfirmedSms" name="Test">
                                <img v-bind:src="isAnyOrderConfirmedSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
                <div class="notification">
                    <p>Notify me when any order is shipped</p>
                    <div class="notification-actions">
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isAnyOrderShippedEmail" :value="isAnyOrderShippedEmail" name="Test">
                                <img v-bind:src="isAnyOrderShippedEmail ? '/Themes/@themeName/Content/assets/icn-invoice.svg' : '/Themes/@themeName/Content/assets/mail.svg'" alt="mail-icon">
                            </label>
                        </div>
                        <div>
                            <label>
                                <input type="checkbox" hidden v-model="isAnyOrderShippedSms" :value="isAnyOrderShippedSms" name="Test">
                                <img v-bind:src="isAnyOrderShippedSms ? '/Themes/@themeName/Content/assets/invoice.svg' : '/Themes/@themeName/Content/assets/mobile-phone.svg'" alt="sms-icon">
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="buttons save-customer-info-button notification-btn">
                <input type=submit v-on:click="updatePreferences"
                       id=save-info-button value='Update Preferences' name=save-info-button
                       class="button-2 ">
            </div>
        </div>
    </div>
</div>

<script>
    var vm = new Vue({
        el: '#notifications',
        data: {
            isMyOrderConfirmedEmail: false,
            isMyOrderConfirmedSms: false,
            isMyOrderScheduledDateEmail: false,
            isMyOrderScheduledDateSms: false,
            isMyOrderPromiseDateEmail: false,
            isMyOrderPromiseDateSms: false,
            isMyOrderReadyEmail: false,
            isMyOrderReadySms: false,
            isMyOrderLoadingEmail: false,
            isMyOrderLoadingSms: false,
            isMyOrderShippedEmail: false,
            isMyOrderShippedSms: false,
            isAnyOrderConfirmedEmail: false,
            isAnyOrderConfirmedSms: false,
            isAnyOrderShippedEmail: false,
            isAnyOrderShippedSms: false
        },
        mounted: function () {
            this.updatePreferences();
        },
        methods: {
            showLoading: function () {
            },
            hideLoading: function () {
            },
            updatePreferences: function () {
                const request = {
                    isMyOrderConfirmedEmail: this.isMyOrderConfirmedEmail,
                    isMyOrderConfirmedSms: this.isMyOrderConfirmedSms,
                    isMyOrderScheduledDateEmail: this.isMyOrderScheduledDateEmail,
                    isMyOrderScheduledDateSms: this.isMyOrderScheduledDateSms,
                    isMyOrderPromiseDateEmail: this.isMyOrderPromiseDateEmail,
                    isMyOrderPromiseDateSms: this.isMyOrderPromiseDateSms,
                    isMyOrderReadyEmail: this.isMyOrderReadyEmail,
                    isMyOrderReadySms: this.isMyOrderReadySms,
                    isMyOrderLoadingEmail: this.isMyOrderLoadingEmail,
                    isMyOrderLoadingSms: this.isMyOrderLoadingSms,
                    isMyOrderShippedEmail: this.isMyOrderShippedEmail,
                    isMyOrderShippedSms: this.isMyOrderShippedSms,
                    isAnyOrderConfirmedEmail: this.isAnyOrderConfirmedEmail,
                    isAnyOrderConfirmedSms: this.isAnyOrderConfirmedSms,
                    isAnyOrderShippedEmail: this.isAnyOrderShippedEmail,
                    isAnyOrderShippedSms: this.isAnyOrderShippedSms
                };
                this.showLoading();
                $("#overlay").css("display", "flex");

                console.log('request', request);
                const self = this;
                $.ajax({
                    url: "@Url.Action("UpdateNotifications", "CustomerOverride")",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(request),
                    success: function (data) {
                        self.hideLoading();
                        console.log('success-data', data);
                    },
                    error: function (xhr, thrownError) {
                        self.hideLoading();
                        console.log('error-data', data);
                        $("#overlay").css("display", "none");
                    }
                });
            },
            enableAllNotifications: function () {
                this.isMyOrderConfirmedEmail = true;
                this.isMyOrderConfirmedSms = true;
                this.isMyOrderScheduledDateEmail = true;
                this.isMyOrderScheduledDateSms = true;
                this.isMyOrderPromiseDateEmail = true;
                this.isMyOrderPromiseDateSms = true;
                this.isMyOrderReadyEmail = true;
                this.isMyOrderReadySms = true;
                this.isMyOrderLoadingEmail = true;
                this.isMyOrderLoadingSms = true;
                this.isMyOrderShippedEmail = true;
                this.isMyOrderShippedSms = true;
                this.isAnyOrderConfirmedEmail = true;
                this.isAnyOrderConfirmedSms = true;
                this.isAnyOrderShippedEmail = true;
                this.isAnyOrderShippedSms = true;

                const request = {
                    isMyOrderConfirmedEmail: this.isMyOrderConfirmedEmail,
                    isMyOrderConfirmedSms: this.isMyOrderConfirmedSms,
                    isMyOrderScheduledDateEmail: this.isMyOrderScheduledDateEmail,
                    isMyOrderScheduledDateSms: this.isMyOrderScheduledDateSms,
                    isMyOrderPromiseDateEmail: this.isMyOrderPromiseDateEmail,
                    isMyOrderPromiseDateSms: this.isMyOrderPromiseDateSms,
                    isMyOrderReadyEmail: this.isMyOrderReadyEmail,
                    isMyOrderReadySms: this.isMyOrderReadySms,
                    isMyOrderLoadingEmail: this.isMyOrderLoadingEmail,
                    isMyOrderLoadingSms: this.isMyOrderLoadingSms,
                    isMyOrderShippedEmail: this.isMyOrderShippedEmail,
                    isMyOrderShippedSms: this.isMyOrderShippedSms,
                    isAnyOrderConfirmedEmail: this.isAnyOrderConfirmedEmail,
                    isAnyOrderConfirmedSms: this.isAnyOrderConfirmedSms,
                    isAnyOrderShippedEmail: this.isAnyOrderShippedEmail,
                    isAnyOrderShippedSms: this.isAnyOrderShippedSms
                };
                this.showLoading();
                $("#overlay").css("display", "flex");

                console.log('request', request);
                const self = this;
                $.ajax({
                    url: "@Url.Action("UpdateNotifications", "CustomerOverride")",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(request),
                    success: function (data) {
                        self.hideLoading();
                        console.log('data', data);
                    },
                    error: function (xhr, thrownError) {
                        self.hideLoading();
                        console.log('data', data);
                        $("#overlay").css("display", "none");
                    }
                });
            }
        },
    });
</script>