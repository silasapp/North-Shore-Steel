@using Nop.Web.Models.Customer
@using Nop.Services.Customers
@using NSS.Plugin.Misc.SwiftCore.Helpers;
@using Syncfusion.EJ2
@model RegisterModel
@{
    Layout = "";
    //Html.AddCssFileParts("~/Plugins/Misc.SwiftPortalOverride/Content/customstyle.css");

}
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
}


<style>

    .ui-dialog.ui-corner-all.ui-widget.ui-widget-content.ui-front.ui-draggable.ui-resizable {
        width: 67rem !important;
        margin: auto;
        position: relative !important;
        top: -100rem !important;
    }

    .text-format {
        font-weight: bold;
        text-decoration: underline
    }
</style>


@{

    Func<object, object>
    Content1 =
    @<div id="viewTOSModal">
        <div class="">
            <p class="pt-4" style="text-align:center"><strong>TERMS AND CONDITIONS</strong> (last modified October 15, 2014)</p>
            <p>
                Each order by Buyer, including shipments to Buyer in response to any telephone orders, shall be deemed an acknowledgement and acceptance by Buyer of Seller’s terms and conditions
                as then in effect. The terms and conditions set forth herein, as may be subsequently modified by Seller from time to time, are incorporated by reference into all sales order forms and
                invoices issued by Seller, and the terms and conditions herein shall constitute the complete and final agreement between Buyer and Seller, superseding prior written and oral
                communications.
            </p>
            <p>
                <span class="text-format">NO MODIFICATIONS.</span> Seller’s provision of credit, acceptance of any purchase order and/or sale of any goods are expressly conditioned upon the terms and conditions contained or
                referred herein. NO TERMS OR CONDITIONS THAT ALTER OR MODIFY IN ANY WAY ANY PROVISION HEREOF SHALL BE BINDING UNLESS EXPRESSLY AGREED
                TO IN A WRITTEN INSTRUMENT SIGNED BY SELLER’S AUTHORIZED REPRESENTATIVE. SELLER OBJECTS TO ANY DIFFERENT OR ADDITIONAL TERMS OR
                CONDITIONS AND HEREBY REJECTS ANY AND ALL SUCH TERMS, WHETHER CONTAINED IN PREVIOUS OR SUBSEQUENT PROPOSALS OR COMMUNICATIONS
                FROM BUYER. Authorization by Buyer to furnish goods hereunder constitutes acceptance of these terms and conditions. BUYER AND SELLER AGREE THAT THE TERMS AND
                CONDITIONS PRINTED HEREIN ARE ACCEPTED IN GOOD FAITH BY BOTH PARTIES AS THE CONTROLLING AND FINAL TERMS AND CONDITIONS, AND
                FURTHER AGREE THAT THERE SHALL BE NO BATTLE OF THE FORMS AS DESCRIBED IN SECTION 2-207 OF THE UNIFORM COMMERCIAL CODE.
            </p>
            <p>
                <span class="text-format">PRICE.</span> The purchase price of any goods sold hereunder shall be as stated on the applicable Seller order acknowledgment or accepted purchase order; provided, however, that any
                increase in Seller’s cost of the subject materials after the date of the applicable Seller order acknowledgment or accepted purchase order, including, but not limited to, any price increase
                or surcharge may result in an increase in such price effective for any goods scheduled for shipment beginning immediately on the date such increase in Seller’s cost of the subject material is
                imposed on Seller. Such price changes may be made effective by Seller without prior notice to Buyer and may be adjusted by Seller periodically to reflect a change is such costs.
                Seller shall be bound as to purchase price only upon shipment and acceptance of all or any part of the goods ordered.
            </p>
            <p>
                <span class="text-format">DELIVERY; FORCE MAJEURE; INSTALLMENTS.</span> Unless otherwise agreed to in writing, Seller does not guarantee any certain date of delivery, and any delay in or failure of
                performance of the Seller shall not constitute default hereunder if such delays and/or failure to perform is caused by an occurrence beyond the control of Seller, including, but not limited to,
                acts of God, acts of war, fires, strikes, severe weather conditions, labor shortages, inability to secure material, and thefts. If Seller’s delay in or failure of performance is covered by this
                provision, then the time for performance by Seller shall be extended by a period of time equal to time lost by reason of such delay. Unless otherwise expressly stated, Seller shall
                have the right to make delivery in installments. All installments shall be separately invoiced and paid as billed without regard to subsequent deliveries. Failure of Buyer to pay for any
                installment when due shall excuse Seller from making further deliveries. Delay in delivery on any installment shall not relieve Buyer of its obligations to accept and pay for
                remaining installments.
            </p>
            <p>
                <span class="text-format">WARRANTY; DISCLAIMER.</span> Seller will furnish goods of the quality specified on the applicable Seller sales order. If goods purchased hereunder are defective or are not in
                substantial conformity with the specifications, subject to the tolerances and variations consistent with usual trade practices, Seller will replace such materials with conforming materials at
                the point of initial delivery or will, at Seller’s election, issue Buyer a credit or refund for the purchase price, provided that <strong>(1)</strong> Buyer has notified Seller of the defect or nonconformity
                within ten (10) days after the delivery of the material (failure to give such notice constitutes acceptance and an irrevocable waiver of all claims); <strong>(2)</strong> the material has been properly worked or
                used by Buyer; and <strong>(3)</strong> Seller has been given a reasonable opportunity to inspect the material. After inspection or waiver of inspection by Seller, Seller will arrange for the disposition of
                defective or nonconforming materials. This warranty is expressly in lieu of all other warranties, expressed or implied, and of all other obligations or liabilities on Seller’s part.
            </p>
            <strong>
                SELLER EXPRESSLY EXCLUDES AND DISCLAIMS ALL OTHER WARRANTIES, EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, THE
                WARRANTIES OF MERCHANTABILITY AND FITNESS FOR USE FOR A PARTICULAR PURPOSE. SELLER SHALL NOT HAVE ANY LIABILITY FOR (A)
                DAMAGES IN AN AMOUNT EXCEEDING THE PURCHASE PRICE OF THE GOODS SOLD HEREUNDER, (B) LOSS OF TIME OR COST OF LABOR EXPENDED,
                OR (C) ANY SEPARATE SPECIAL, INDIRECT, CONSEQUENTIAL, OR INCIDENTAL DAMAGES, INCLUDING, WITHOUT LIMITATION, CONSEQUENTIAL
                DAMAGES RESULTING FROM REJECTION OF FINISHED PARTS BY BUYER OR BUYER'S CUSTOMERS.
            </strong>
            <p></p>
            <p>
                <span class="text-format">SECURING AND OFFLOADING.</span> Buyer is responsible for the securing of all loads of material transported from Seller’s facility in Buyers vehicle, as well as for flagging or
                otherwise marking such material for transport. If a third party freight carrier transports material from Seller’s facility, the freight carrier shall be responsible for securing the load,
                flagging, or otherwise marking the material for transport. Seller shall not have any liability to Buyer or any third party for any (1) damage to, or loss of, any vehicle used to carry material
                purchased by Buyer from Seller, whether such vehicle belongs to Buyer or a third party, or to any other vehicle belonging to a third party, (2) damage to, or loss of, the material
                purchased by Buyer from Seller or to a third party’s property (real or personal), (3) injury to any person (whether the driver of the vehicle carrying the material or an unassociated third
                person), or (4) any other loss of any kind, resulting from a failure by Buyer or a freight carrier to properly secure a load of material purchased from Seller and transported from Seller’s
                facility in Buyers vehicle or on a vehicle belong to a freight carrier. Buyer is expressly prohibited from manually offloading material from Seller’s trucks. Buyer is expected to have the
                proper equipment and manpower to offload material without assistance from Seller’s driver. If Buyer does not have a safe, conventional means of offloading the material, Seller’s
                driver will be forced to return to Seller’s facility with the material and the customer may be charged for the expense of the trip.
            </p>
            <p>
                <span class="text-format">GOVERNING LAW; LITIGATION AND COLLECTION.</span> This contract is deemed made in Texas and shall be governed by and construed in accordance with the laws of
                Texas. Any controversy or claim arising out of or relating to this sale shall be mediated by a mutually agreed upon mediator in Harris County, Texas. The cost of the mediation shall be
                shared equally. In the event the dispute is not resolved through mediation, any litigation shall be brought in Harris County, Texas, which courts shall have the exclusive venue for and
                have exclusive jurisdiction over any such litigation. Buyer and Seller hereby expressly consent to the jurisdiction and venue of said courts. If any default is made in payment of
                amounts due for the sale of goods and materials hereunder or upon any other breach of the terms and conditions set forth herein, Buyer agrees to pay Seller’s reasonable cost of collection
                and/or compliance, including reasonable attorney fees and costs, not to exceed an amount allowed by law. Buyer and Seller agree that any action, regardless of form, arising out of
                this sale must be brought within one (1) year after the goods are delivered to Buyer.
            </p>
            <p>
                <span class="text-format">TAXES AND OTHER CHARGES.</span> In addition to the price quoted for goods sold, Buyer shall pay any tax imposed by any present or future law on the sale of goods covered by this
                order, and all other reasonable charges for ancillary services and costs such as forming, galvanizing, and other services. If Buyer fails to make payment to Seller of any amounts due
                and owing (including any applicable surcharge or freight charge) by the net due date, Seller may charge interest on the outstanding balance at an annual rate of 18% or the highest rate
                allowed by law (whichever is less). Payments after accrual of such interest charges shall be applied first against such interest charges and secondly against past due invoices.
            </p>
            <p>
                <span class="text-format">FINANCIAL RESPONSIBILITY.</span> Reasonable doubt on the part of Seller concerning the financial responsibility of Buyer (including, but not limited to, Buyers failure to pay on the
                net due date for goods shipped) shall entitle Seller to stop operation, decline shipment, or stop any material in transit without liability, until the material has been paid for or until Seller is
                furnished reasonably satisfactory proof of Buyers financial responsibility. If Seller suspends performance and later proceeds with such order, Seller shall be entitled to such extension of
                time for performance as is necessitated by the suspension. Seller may, in its discretion, require any order placed by Buyer to be paid on a C.O.D. basis.
            </p>
            <p>
                <span class="text-format">RETURNS.</span> No goods may be returned for credit and no order may be cancelled, in whole or in part, without the prior written consent of Seller. If Seller consents to a return, Seller may
                assess a restocking fee of $20 or 15%, whichever is greater.
            </p>
            <p>
                <span class="text-format">SECURITY INTEREST.</span> Buyer grants to Seller a security interest in the goods sold hereunder and in any goods made or fabricated therefrom and the proceeds thereof, said security
                interest securing all obligations of Buyer at any time owing to the Seller, whether now existing or hereinafter incurred. Buyer agrees, until such time as Seller has been paid in full for the
                goods purchased hereunder, that it will keep the goods free from any adverse security interest. Seller may file a copy of the applicable invoice as a financing statement at any time.
            </p>
            <p>
                <span class="text-format">WAIVER.</span> Neither any failure nor any delay on the part of Seller in exercising any rights hereunder shall operate as a waiver of any of Seller’s rights hereunder. All rights and remedies
                granted herein are in addition to all remedies available at law or in equity.
            </p>
            <p>
                <span class="text-format">INDEMNIFICATION.</span> Buyer shall defend, indemnify and hold harmless Seller and Seller’s affiliates, successors and assigns against any and all claims or damages of any kind, including
                reasonable attorney and professional fees and costs, and the cost of enforcing any right to indemnification hereunder arising out of or occurring in connection with Buyer’s use or resale of
                any goods purchased hereunder, or Buyer’s negligence, willful misconduct or breach of these terms.
            </p>
            <p>
                <span class="text-format">CONFIDENTIALITY.</span> Buyer agrees never to disclose or copy, without written consent from Seller, any non-public, confidential or proprietary information of Seller, including any
                specifications, samples, patterns, designs, plans, drawings, documents, data, business operations, pricing, discounts or rebates, disclosed by Seller to Buyer, whether disclosed orally or
                disclosed or accessed in written, electronic or other form or media, and whether or not marked, designated or otherwise identified as “confidential.”
            </p>
            <p>
                <span class="text-format">SEVERABILITY.</span> If any section or portion of a section of these terms and conditions are deemed unlawful or unenforceable, that section or portion of a section shall be stricken, and the
                remaining terms and conditions shall continue in full force and effect.
            </p>
            <p>
                <span class="text-format">EXPORT COMPLIANCE.</span> Buyer agrees and certifies that neither the goods purchased from Seller, nor the direct product thereof, will be exported outside the United States (1) into any
                country (or to a national or resident of any such country) as to which the U.S. has embargoed goods, (2) to anyone on the U.S. Treasury Departments list of Specially Designated
                Nationals or the U.S. Commerce Departments Table of Deny Orders, or (3) otherwise in violation of or as prohibited by the laws, rules, regulations or administrative order of the United
                States, or any unit, agency or department thereof. Buyer further agrees and certifies that it is not located in, under the control of, or a national or resident of any such country, on any such list
                or order, or subject to any such prohibition.
            </p>
            <p>
                <span class="text-format">MSDS CAUTION.</span> When the goods sold hereunder are subject to welding, cutting, grinding, or other processing and/or fabrication, hazardous substances and/or fumes may be released.
                Please contact Seller for material safety data sheets on the goods sold hereunder.
            </p>
        </div>
    </div>;
}

<div class="page registration-page">
    <div class="page-title">
        <h1>REGISTER</h1>
    </div>

    <div class="page-body">
        <form asp-route="Register" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off">
            <div class="fieldset">

                <div class="form-fields">
                    <div class="title">
                        <strong>PERSONAL INFORMATION</strong>
                    </div>
                    <div asp-validation-summary="ModelOnly" class="message-error" style="font-size:16px"></div>

                    <div>
                        <div class="form-group row">
                            @if (Model.FirstNameEnabled)
                            {
                                <div class="col-md-6 col-sm-12 col-xs-12 text-left mb-3">
                                    <label asp-for="FirstName">First Name</label>
                                    <nop-required />
                                    <input asp-for="FirstName" placeholder="Enter first name" class="form-control custom-input" />
                                    <span asp-validation-for="FirstName" style="display:flex;"></span>
                                </div>
                            }


                            @if (Model.LastNameEnabled)
                            {
                                <div class="col-md-6 col-sm-12 col-xs-12 text-left">
                                    <label asp-for="LastName">Last Name</label>
                                    <nop-required />
                                    <input asp-for="LastName" placeholder="Enter last name" class="form-control custom-input" />
                                    <span asp-validation-for="LastName" style="display: flex;"></span>
                                </div>
                            }



                        </div>


                        <div class="form-group row">

                            <div class="col-md-6 col-sm-12 col-xs-12 text-left mb-3">
                                <label asp-for="Email">Work Email</label>
                                <nop-required />
                                <input asp-for="Email" placeholder="Enter email" class="form-control custom-input" />
                                <span asp-validation-for="Email" style="display:flex;"></span>
                            </div>

                            @if (Model.EnteringEmailTwice)
                            {
                                <div class="col-md-6 col-sm-12 col-xs-12 text-left">
                                    <label asp-for="ConfirmEmail">Confirm Email</label>
                                    <nop-required />
                                    <input asp-for="ConfirmEmail" placeholder="Enter confirm email" class="form-control custom-input" />
                                    <span asp-validation-for="ConfirmEmail" style="display:flex;"></span>
                                </div>
                            }

                        </div>


                        <div class="form-group row">

                            <div class="col-md-6 col-sm-12 col-xs-12 text-left mb-3">
                                <label asp-for="Password">Set Password</label>
                                <nop-required />
                                <input asp-for="Password" placeholder="Enter password" class="form-control custom-input" />
                                <span asp-validation-for="Password" style="display:flex;"></span>

                            </div>

                            <div class="col-md-6 col-sm-12 col-xs-12 text-left">
                                <label asp-for="ConfirmPassword">Confirm Password</label>
                                <nop-required />
                                <input asp-for="ConfirmPassword" placeholder="Enter confirm password" class="form-control custom-input" />
                                <span asp-validation-for="ConfirmPassword" style="display:flex;"></span>
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <nop-captcha />
                            }

                        </div>


                        <div class="form-group row">
                            @if (Model.CompanyEnabled)
                            {
                                <div class="col-md-6 col-sm-12 col-xs-12 text-left mb-3">
                                    <label asp-for="Company">Company Name</label>
                                    <nop-required />
                                    <input asp-for="Company" placeholder="Enter company name" class="form-control custom-input" />
                                    <span asp-validation-for="Company" style="display:flex;"></span>

                                    @{
                                        var isExistingCustomerCtrl = Model.CustomerAttributes.Where(x => x.Name == "Existing Customer").FirstOrDefault();
                                    }
                                    @if (isExistingCustomerCtrl != null)
                                    {
                                        var controlId = $"{NopCustomerServicesDefaults.CustomerAttributePrefix}{isExistingCustomerCtrl.Id}";
                                        <div class="option-list pt-3">
                                            @foreach (var attributeValue in isExistingCustomerCtrl.Values)
                                            {
                                                @*<li>*@
                                                <label class="pure-material-checkbox" for="@(controlId)_@(attributeValue.Id)" id="current-customer">
                                                    <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                                    <span class="checkmark"></span>
                                                    <span class="pl-2">I am a current customer</span>
                                                </label>
                                                @*<input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />*@
                                                @*<label for="@(controlId)_@(attributeValue.Id)" class="mb-1 pl-2" id="current-customer">I am a current customer</label>*@
                                                @*</li>*@
                                            }
                                        </div>
                                    }

                                </div>
                            }

                            @if (Model.PhoneEnabled)
                            {
                                <div class="col-md-6 col-sm-12 col-xs-12 text-left">
                                    <label asp-for="Phone">Phone Number</label>
                                    <nop-required />
                                    <input asp-for="Phone" placeholder="Enter phone number" class="form-control custom-input" />
                                    <span asp-validation-for="Phone" style="display:flex;"></span>
                                </div>
                            }

                        </div>

                    </div>
                </div>
            </div>



            @if (Model.CustomerAttributes.Count > 0)
            {
                <div class="fieldset">
                    <div class="form-fields">
                        <div class="title">
                            <strong>OTHER INFORMATION</strong>
                        </div>
                        <div class="row">
                            <div class="col-md-6 col-sm-12 col-xs-12">
                                <div style="margin-bottom: 2em">
                                    @foreach (var attribute in Model.CustomerAttributes)
                                    {
                                        var controlId = $"{NopCustomerServicesDefaults.CustomerAttributePrefix}{attribute.Id}";
                                        var textPrompt = attribute.Name;

                                        @if (attribute.Name == Constants.HearAboutUsAttribute)
                                        {
                                            <label>How did you hear about us?</label>
                                            <nop-required />
                                            <select name="@(controlId)" id="@(controlId)" class="form-control custom-input about-us" onchange="otherMethodCheck(this);">
                                                @if (!attribute.IsRequired)
                                                {
                                                    <option value="0"> ---</option>
                                                }
                                                @foreach (var attributeValue in attribute.Values)
                                                {
                                                    <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id"> @attributeValue.Name </option>
                                                }
                                            </select>
                                        }
                                    }
                                </div>

                                <div style="margin-bottom: 2em">
                                    @foreach (var attribute in Model.CustomerAttributes)
                                    {
                                        var controlId = $"{NopCustomerServicesDefaults.CustomerAttributePrefix}{attribute.Id}";
                                        var textPrompt = attribute.Name;

                                        @if (attribute.Name == Constants.OtherAttribute)
                                        {
                                            <div id="found-us-container" style="display:none">
                                                <label> Let us know how you found us</label>
                                                <input name="@(controlId)" placeholder="Enter how you found us" type="text" class="textbox form-control custom-input found-us" id="@(controlId)" value="@(attribute.DefaultValue)" />
                                                <label id="found-us-text-error" style="display:none" class="text-danger mt-1 mb-0">How you found us is required</label>
                                            </div>
                                        }
                                    }
                                </div>

                                <div>
                                    @foreach (var attribute in Model.CustomerAttributes)
                                    {
                                        var controlId = $"{NopCustomerServicesDefaults.CustomerAttributePrefix}{attribute.Id}";
                                        var textPrompt = attribute.Name;


                                        @if (attribute.Name == Constants.PreferredLocationIdAttribute)
                                        {
                                            <label>Preferred pickup location</label>
                                            <nop-required />
                                            <select name="@(controlId)" id="@(controlId)" class="form-control custom-input">
                                                @if (!attribute.IsRequired)
                                                {
                                                    <option value="0">---</option>
                                                }
                                                @foreach (var attributeValue in attribute.Values)
                                                {
                                                    <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                                                }
                                            </select>
                                        }

                                    }
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12 col-xs-12">
                                @foreach (var attribute in Model.CustomerAttributes)
                                {
                                    var controlId = $"{NopCustomerServicesDefaults.CustomerAttributePrefix}{attribute.Id}";
                                    var textPrompt = attribute.Name;
                                    @if (attribute.Name == Constants.ItemsForNextProjectAttribute)
                                    {
                                        <div>
                                            <label>How can we help?</label>
                                            <nop-required />
                                            <textarea id="@(controlId)" placeholder="What items are you considering for your next project?" class="form-control custom-input help-text" name="@(controlId)">@(attribute.DefaultValue)</textarea>
                                            <label id="help-text-error" style="display:none" class="text-danger mt-1 mb-0">How can we help is required</label>
                                        </div>
                                    }
                                }
                            </div>

                        </div>
                    </div>

                    @if (Model.AcceptPrivacyPolicyEnabled)
                    {
                        <script asp-location="Footer">
                                $(document).ready(function() {
                                    $('#register-button').on('click', function () {
                                        if ($(".help-text").val() == "") {
                                            $("#help-text-error").css("display", "block")
                                        } else {
                                            $("#help-text-error").css("display", "none")
                                        }
                                        if ($("#found-us-container").is(":visible") && $(".found-us").val() == "") {
                                            $("#found-us-text-error").css("display", "block")
                                        } else {
                                            $("#found-us-text-error").css("display", "none")
                                        }
                                        if ($('#accept-consent').is(':checked')) {
                                            //do some stuff
                                            return true;
                                        } else {
                                            //just show validation errors, don't post
                                            alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                            return false;
                                        }
                                    });
                                });
                        </script>
                        <div class="accept-consent">
                            <label class=pure-material-checkbox>
                                <input id="accept-consent" type="checkbox" name="accept-consent" />
                                <span class="checkmark"></span>
                                @if (Model.AcceptPrivacyPolicyPopup)
                                {
                                    <a class="read" id="read-privacyinfo">Accept Terms and Privacy Policy</a>
                                    <script asp-location="Footer">
                                        $(document).ready(function () {
                                            $('#read-privacyinfo').on('click',
                                                function (e) {
                                                    handleTOSModal()
                                                });
                                        });
                                    </script>
                                }
                                else
                                {
                                    @*<a class="read" id="read-privacyinfo" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("privacyinfo") })">@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>*@
                                }
                            </label>
                        </div>
                    }

                    <div class="buttons">
                        <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button" />
                    </div>
                </div>
            }
        </form>
        <div class="external-authentication">
            @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        </div>
    </div>
    @Html.EJS().Dialog("dialog").Visible(false).IsModal(true).Created("onDialogCreated").Header("").ContentTemplate(@Content1).ShowCloseIcon(true).Visible(false).Width("1200px").Target("body").Render();

</div>



<script>
    function onDialogCreated() {
        viewTOSModal = this;
    }

    function handleTOSModal() {
        viewTOSModal.show();
    }

    $(document).ready(function () {
        var hearAboutUsContainer = $(".about-us");
        if (hearAboutUsContainer.children("option:selected")[0].label == "Other") {
            $("#found-us-container").css("display", "block")
        } else {
            $("#found-us-container").css("display", "none")
        }
    });

    function otherMethodCheck(option) {
        let optionName = option.options[option.selectedIndex].text;
        if (optionName == "Other") {
            $("#found-us-container").css("display", "block")
        } else {
            $("#found-us-container").css("display", "none")
        }
    }
</script>
<ejs-scripts></ejs-scripts>