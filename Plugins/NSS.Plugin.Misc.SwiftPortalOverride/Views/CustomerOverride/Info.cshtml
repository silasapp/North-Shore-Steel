@using Nop.Core
@using Nop.Web.Models.Customer
@using NSS.Plugin.Misc.SwiftCore.Helpers;
@using Nop.Services.Common
@model CustomerInfoModel
@inject Nop.Core.IWebHelper webHelper
@inject IWorkContext workContext
@inject IGenericAttributeService genericAttributeService
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-customer-info-page");
}

@section left
    {
    @await Component.InvokeAsync("CustomCustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Info })
}

@{
    var customer = workContext.CurrentCustomer;
    int ErpId = genericAttributeService.GetAttribute<int>(customer, Constants.ErpKeyAttribute);
}

<div class="page account-page customer-info-page">
    <div class="page-body">
        <form asp-route="CustomerInfo" method="post">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            <div class="account-page-card">
                <div class="title"><strong>PERSONAL INFORMATION</strong></div>
                <div class="form-fields">
                    @if (Model.FirstNameEnabled)
                    {
                        <div class="inputs">
                            <label asp-for="FirstName" asp-postfix=":"></label>
                            <input asp-for="FirstName" />
                            @if (Model.FirstNameRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="FirstName"></span>
                        </div>
                    }

                    <div class="inputs">
                        <label asp-for="Email" asp-postfix=":"></label>
                        <input asp-for="Email" readonly style="cursor: unset" />
                        <nop-required />
                        <span asp-validation-for="Email"></span>
                    </div>

                    @if (Model.LastNameEnabled)
                    {
                        <div class="inputs">
                            <label asp-for="LastName" asp-postfix=":"></label>
                            <input asp-for="LastName" />
                            @if (Model.LastNameRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="LastName"></span>
                        </div>
                    }

                    @if (Model.PhoneEnabled)
                    {
                        <div class="inputs">
                            <label asp-for="Phone" asp-postfix=":"></label>
                            <input asp-for="Phone" />
                            @if (Model.PhoneRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="Phone"></span>
                        </div>
                    }


                    @if (Model.CompanyEnabled)
                    {
                        <div class="inputs">
                            <label asp-for="Company" asp-postfix=":"></label>
                            <input asp-for="Company" readonly style="cursor: unset" />
                            @if (Model.CompanyRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="Company"></span>
                        </div>
                    }

                    @if (!String.IsNullOrEmpty(ErpId.ToString()))
                    {
                        <div class="inputs">
                            <label>Customer Number</label>
                            <label>@ErpId</label>
                        </div>
                    }


                    @if (Model.CustomerAttributes.Count > 0)
                    {
                        @await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes);
                    }

                </div>
                <div class="buttons save-customer-info-button">
                    <input type=submit id=save-info-button value='Save Changes' name=save-info-button class="button-2 ">
                </div>
            </div>
        </form>
    </div>
</div>
<script asp-location="Footer">
    function removeexternalassociation(itemId) {
        if (confirm('@T("Common.AreYouSure")')) {
            var postData = {
                id: itemId
            };
            addAntiForgeryToken(postData);
            $.ajax({
                cache: false,
                type: "POST",
                url: "@Url.Action("RemoveExternalAssociation", "Customer")",
                data: postData,
                dataType: "json",
                success: function (data, textStatus, jqXHR) {
                    location.href = data.redirect;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Failed to delete');
                }
            });
        }
        return false;
    }
</script>
