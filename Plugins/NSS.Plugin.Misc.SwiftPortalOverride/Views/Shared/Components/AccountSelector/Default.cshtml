@using Nop.Core
@using NSS.Plugin.Misc.SwiftPortalOverride
@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@using NSS.Plugin.Misc.SwiftCore.Domain.Customers
@using NSS.Plugin.Misc.SwiftCore.Services
@using NSS.Plugin.Misc.SwiftCore.Helpers
@inject IWorkContext workContext
@inject ICustomerCompanyService customerCompanyService
@{
    int customerId = workContext.CurrentCustomer.Id;
    // get all companies assigned to customer
    IEnumerable<CustomerCompany> customerCompanies = customerCompanyService.GetCustomerCompanies(customerId);

    CustomerSelectAccountModel selectAccountModel = new CustomerSelectAccountModel();
    selectAccountModel.Companies = customerCompanies.Select(cc => cc.Company);
    selectAccountModel.loggedInCustomerId = customerId;
    selectAccountModel.Count = customerCompanies.Count();
}

@{
    // get cust company
    var compIdCookieKey = string.Format(SwiftPortalOverrideDefaults.ERPCompanyCookieKey, workContext.CurrentCustomer.Id);
    int eRPCompanyId = Common.GetSavedERPCompanyIdFromCookies(Context.Request.Cookies[compIdCookieKey]);
}


<div id="top-menu-drawer">
    <div class="d-flex flex-column flex-lg-row align-items-lg-center mb-0">
        <div class="d-lg-none d-flex flex-row align-items-center justify-content-center bg-primary px-3 py-4 flex-fill">
            <label class="h2-white-500 text-center ml-3 mb-0 pt-1 flex-fill">MENU</label>
            <img src="Themes/SwiftPortal/Content/assets/close-white.svg" alt="Close menu" v-on:click="closeMenuDrawer" width="24">
        </div>
        @if (selectAccountModel.Count > 1)
        {
            <select id="accountSelect" name="options" class="account-select" data-role="accountSelect" onchange="SelectCompany(this)">
                <option selected disabled>Accounts </option>
                @foreach (var company in selectAccountModel.Companies)
                {
                    <option value="@company.ErpCompanyId" id=@company.ErpCompanyId>@company.Name</option>
                }
            </select>
        }
        @await Component.InvokeAsync("CustomTopMenu")
    </div>
</div>


<script type='text/javascript'>
        function SelectCompany(option) {
            let ErpId = option.options[option.selectedIndex].id;
            let cookieKey = `ERPCompanyId${@{@selectAccountModel.loggedInCustomerId}}=`
            document.cookie = cookieKey + ErpId;
            document.location.href = "/";
        }


        var erpCompId = @Html.Raw(eRPCompanyId);
        $(document).ready(function () {
            $('select[name="options"]').find('option[value='+erpCompId+']').attr("selected", true);
        });

    new Vue({
        el: '#top-menu-drawer',
        data: {

        },
        methods: {
            closeMenuDrawer: function () {
                headerLinksVm.closeDrawer();
            },
        },
    })

</script>

