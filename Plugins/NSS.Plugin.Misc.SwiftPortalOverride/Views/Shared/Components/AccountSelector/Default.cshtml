@using Nop.Core
@using NSS.Plugin.Misc.SwiftPortalOverride
@using NSS.Plugin.Misc.SwiftPortalOverride.Models
@using NSS.Plugin.Misc.SwiftCore.Domain.Customers
@using NSS.Plugin.Misc.SwiftCore.Services
@inject IWorkContext workContext
@inject ICustomerCompanyService customerCompanyService
@{
    int customerId = workContext.CurrentCustomer.Id;
    // get all companies assigned to customer
    IEnumerable<CustomerCompany> customerCompanies = customerCompanyService.GetCustomerCompanies(customerId);

    CustomerSelectAccountModel selectAccountModel = new CustomerSelectAccountModel();
    selectAccountModel.Companies = customerCompanies.Select(cc => cc.Company);
    selectAccountModel.loggedInCustomerId = customerId;
}

@{
    // get cust company
    var erpCompId = GetCustomerCompanyDetails();
}


@if (selectAccountModel.Companies != null)
{
    <div class="header-lower p-0">
        <div class="header-menu bg-white py-3 mb-0">
            <select id="accountSelect" name="options" class="account-select" data-role="accountSelect" onchange="SelectCompany(this)">
                <option disabled>Accounts </option>
                @foreach (var company in selectAccountModel.Companies)
                {
                    <option value="@company.ErpCompanyId" id=@company.ErpCompanyId>@company.Name</option>
                }
            </select>
            @await Component.InvokeAsync("TopMenu")
        </div>
    </div>
}



<script type='text/javascript'>
        function SelectCompany(option) {
            let ErpId = option.options[option.selectedIndex].id;
            let cookieKey = `ERPCompanyId${@{@selectAccountModel.loggedInCustomerId}}=`
            document.cookie = cookieKey + ErpId;
            document.location.href = "/";
        }


        var erpCompId = @Html.Raw(erpCompId);
        $(document).ready(function () {
            $('select[name="options"]').find('option[value='+erpCompId+']').attr("selected", true);
        });

</script>
@functions{

    int GetCustomerCompanyDetails()
    {
        var compIdCookieKey = string.Format(SwiftPortalOverrideDefaults.ERPCompanyCookieKey, workContext.CurrentCustomer.Id);

        int.TryParse(Context.Request.Cookies[compIdCookieKey], out int eRPCompanyId);


        return eRPCompanyId;
    }
}
