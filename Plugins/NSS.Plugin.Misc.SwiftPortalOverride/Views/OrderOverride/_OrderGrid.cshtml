@using NSS.Plugin.Misc.SwiftPortalOverride.Models

@model CompanyOrderListModel
@using Syncfusion.EJ2

<style>
    .e-headercell.e-lastcell, .e-rowcell.e-gridchkbox {
        padding-left: 0.6rem
    }

    .colorRed {
        color: red !important;
    }

    .home-table-sm-header {
        width: 110px !important;
        background-color: #0076b4 !important;
        /* border-bottom: 0.1px solid white; */
    }
</style>
<div id="ordersGrid">
    <ejs-grid v-if="!isMobile" id="OrderGrid" dataSource="@Model.Orders" excelQueryCellInfo="excelQueryCellInfo" queryCellInfo="customiseCell" allowExcelExport="true"
              allowPaging="true" allowFiltering="true" rowSelected="onRowSelected" rowDeselected="onRowDeselected">
        <e-grid-filtersettings type="Menu"></e-grid-filtersettings>
        <e-grid-pagesettings pageSize="100"></e-grid-pagesettings>
        <e-grid-columns>
            <e-grid-column headerText="Order #" template="#orderNo" minWidth="80" width="90" maxWidth="100" allowFiltering="false"></e-grid-column>
            <e-grid-column field="PoNo" headerText="PO #" minWidth="60" width="70" maxWidth="80" allowFiltering="false"></e-grid-column>
            <e-grid-column field="Weight" headerText="Weight (lb)" minWidth="120" format="N0" width="130" maxWidth="140" allowFiltering="false"></e-grid-column>
            <e-grid-column field="OrderTotal" headerText="Order Amount" minWidth="110" width="120" format="C2" maxWidth="130" allowFiltering="false"></e-grid-column>
            <e-grid-column field="OrderDate" headerText="Order Date" minWidth="110" width="120" maxWidth="130" format="M/d/yy" allowFiltering="false"></e-grid-column>
            <e-grid-column field="PromiseDate" headerText="Promise Date" minWidth="110" width="120" maxWidth="130" format="M/d/yy" allowFiltering="false"></e-grid-column>
            @if (Model.IsClosed)
            {
                <e-grid-column field="DeliveryDate" headerText="Delivery Date" minWidth="110" width="120" maxWidth="130" format="M/d/yy" allowFiltering="false"></e-grid-column>
                <e-grid-column template="#viewTicket" headerText="Delivery Ticket" minWidth="110" width="120" maxWidth="130" allowFiltering="false"></e-grid-column>
            }
            else
            {
                <e-grid-column field="ScheduledDate" headerText="Scheduled Date" minWidth="120" width="130" maxWidth="140" format="M/d/yy" allowFiltering="false"></e-grid-column>
                <e-grid-column field="OrderStatusName" headerText="Status" filter="@(new { type = "CheckBox" })" minWidth="110" width="120" maxWidth="130"></e-grid-column>
            }
            <e-grid-column type="checkbox" width="30"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
    <div v-bind:style="{'margin-bottom': isMobile ? '40px':'0'}">
        @foreach (var order in Model.Orders)
        {
            <div v-if="isMobile" class="d-flex" style="background-color: #ffffff;">
                <label v-if="isExportMode" class="nss-checkbox mr-3">
                    <input type="checkbox"
                           v-on:change="onCheck(@order.OrderId)">
                    <span class="checkmark"></span>
                </label>
                <div class="d-flex flex-column bg-white-shadow mb-3 w-100">

                    <div class="d-flex flex-row">
                        <div class="d-flex bg-primary p-2 home-table-sm-header">
                            <label class="fs12-white mb-0">Order #</label>
                        </div>
                        <div class="d-flex p-2">
                            <a class="fs12-link" href="/orders/@order.OrderId">@order.OrderId</a>
                        </div>
                    </div><div class="d-flex flex-row">
                        <div class="d-flex bg-primary p-2 home-table-sm-header">
                            <label class="fs12-white mb-0">Purchase Order #</label>
                        </div>
                        <div class="d-flex p-2">
                            <a class="fs12-link">@order.PoNo</a>
                        </div>
                    </div>
                    <div class="d-flex flex-row">
                        <div class="d-flex bg-primary p-2 home-table-sm-header">
                            <label class="fs12-white mb-0">Tot. Weight (lbs)</label>
                        </div>
                        <div class="d-flex p-2">
                            <label class="fs12-default mb-0">@order.Weight</label>
                        </div>
                    </div>

                    <div class="d-flex flex-row">
                        <div class="d-flex bg-primary p-2 home-table-sm-header">
                            <label class="fs12-white mb-0">Order Amount</label>
                        </div>
                        <div class="d-flex p-2">
                            <label class="fs12-default mb-0">@order.OrderTotal</label>
                        </div>
                    </div>
                    <div class="d-flex flex-row">
                        <div class="d-flex bg-primary p-2 home-table-sm-header">
                            <label class="fs12-white mb-0">Order Date</label>
                        </div>
                        <div class="d-flex p-2">
                            <label class="fs12-default mb-0">@order.OrderDate</label>
                        </div>
                    </div>
                    <div class="d-flex flex-row">
                        <div class="d-flex bg-primary p-2 home-table-sm-header">
                            <label class="fs12-white mb-0">Promise Date</label>
                        </div>
                        <div class="d-flex p-2">
                            <label class="fs12-default mb-0">@order.PromiseDate</label>
                        </div>
                    </div>
                    @if (Model.IsClosed)
                    {
                        <div class="d-flex flex-row">
                            <div class="d-flex bg-primary p-2 home-table-sm-header">
                                <label class="fs12-white mb-0">Scheduled Date</label>
                            </div>
                            <div class="d-flex p-2">
                                <label class="fs12-default mb-0">@order.ScheduledDate</label>
                            </div>
                        </div>
                        @*<div class="d-flex flex-row">
                                <div class="d-flex bg-primary p-2 home-table-sm-header">
                                    <label class="fs12-white mb-0">Promise Date</label>
                                </div>
                                <div class="d-flex p-2">
                                    <label class="fs12-default mb-0">@order.DeliveryDate</label>
                                </div>
                            </div>*@
                    }
                    else
                    {
                        <div class="d-flex flex-row">
                            <div class="d-flex bg-primary p-2 home-table-sm-header">
                                <label class="fs12-white mb-0">Promise Date</label>
                            </div>
                            <div class="d-flex p-2">
                                <label class="fs12-default mb-0">@order.PromiseDate</label>
                            </div>
                        </div><div class="d-flex flex-row">
                            <div class="d-flex bg-primary p-2 home-table-sm-header">
                                <label class="fs12-white mb-0">Status</label>
                            </div>
                            <div class="d-flex p-2">
                                <label class="fs12-default mb-0">@order.OrderStatusName</label>
                            </div>
                        </div>
                    }


                </div>
            </div>
        }
    </div>
</div>
<script>
    var vm = new Vue({
        el: '#ordersGrid',
        data: {
            window: {
                width: 0,
                height: 0,
            },
            isExportMode: false,
        },
        created: function () {
            window.addEventListener("resize", this.handleResize);
            this.handleResize();
        },
        destroyed: function () {
            window.removeEventListener("resize", this.handleResize);
        },
        computed: {
            isMobile: function () {
                return this.window.width <= 767.98;
            },
        },
        methods: {
            handleResize: function () {
                this.window.width = window.innerWidth;
                this.window.height = window.innerHeight;
            },

        },
    });
</script>
<script>
    function toolbarClick() {
        var gridObj = document.getElementById("OrderGrid").ej2_instances[0];
        var exceldata = gridObj.getSelectedRecords();
        if (exceldata.length > 0) {
            var exportProperties = {
                dataSource: exceldata,
                fileName: "OrdersExport.xlsx"
            };
            gridObj.excelExport(exportProperties);
        }
    }

    function excelQueryCellInfo(args) {
        if (args.column.headerText == "Order #" && args.value.length === 0) { args.value = args.data.OrderId; }
        if (args.column.headerText == "Order Amount" && args.value.length === 0) { args.value = args.data.OrderTotal; }
    }

    function onRowSelected(args) {
        var gridObj = document.getElementById("OrderGrid").ej2_instances[0];
        var exceldata = gridObj.getSelectedRecords();
        vm.selectedRowCount = exceldata.length;
    }

    function onRowDeselected(args) {
        var gridObj = document.getElementById("OrderGrid").ej2_instances[0];
        var exceldata = gridObj.getSelectedRecords();
        vm.selectedRowCount = exceldata.length;
    }

    function customiseCell(args) {
        if (args.column.field === 'OrderStatusName') {
            if (args.data['OrderStatusName'].indexOf("past due") > -1) {
                args.cell.classList.add('colorRed');
            }
        }
    }

</script>

<script id="orderNo" type="text/x-template">
    <a href="/orders/${OrderId}">${OrderId}</a>
</script>
<script id="viewTicket" type="text/x-template">
    <a href="">View Ticket</a>
</script>
<ejs-scripts></ejs-scripts>