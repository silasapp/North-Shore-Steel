@inject IThemeContext themeContext
@using Nop.Web.Framework.Themes
@using NSS.Plugin.Misc.SwiftPortalOverride.Models

@model CompanyOrderListModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@{ var themeName = themeContext.WorkingThemeName; }
<div id="orders" class="page orders-page">
    <div class=page-body>
        <div class="orders-search-block" id=ordersTableBlock role=tabpanel
             aria-labelledby=ordersTableBlock>
            <div>
                <div class="orders-title">SEARCH ORDERS</div>
                <div class="orders-export cursor-pointer" v-on:click="isSearchOpen = !isSearchOpen;">
                    <img class="collapse-icon" v-bind:class="{'down': isSearchOpen}" id="collapseIcon"
                         src="~/Themes/@(themeName)/Content/assets/icn-expand.svg" alt="" />
                </div>
            </div>

            <div v-show="isSearchOpen" class="row">
                <div class="col-lg-2 col-md-6 col-sm-6 d-flex flex-column my-3 py-0">
                    <label for=orderFromDate>Order Dates</label>
                    <div class="input-with-icon">
                        <input class=nss-form-control type="text" onfocus="(this.type='date')" onblur="(this.type='text')"
                               v-model="fromDate" placeholder="From">
                        <img src="~/Themes/@(themeName)/Content/assets/icn-cal-range.svg" alt="">
                    </div>
                </div>
                <div class="col-lg-2 col-md-6 col-sm-6 d-flex flex-column my-3 py-0">
                    <label for=orderToDate> &nbsp;</label>
                    <div class="input-with-icon">
                        <input class=nss-form-control type="date" v-model="toDate" placeholder="To" />
                        <img src="~/Themes/@(themeName)/Content/assets/icn-cal-range.svg" alt="">
                    </div>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 d-flex flex-column my-3 py-0">
                    <label>Invoice #</label>
                    <input class="nss-form-control" type="text" v-model="invoiceId" placeholder="Enter...">
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 d-flex flex-column my-3 py-0">
                    <label>Purchase Order #</label>
                    <input class=nss-form-control type=text v-model="poNo" placeholder="Enter...">
                </div>
                <div class="col-lg-2 col-md-12 col-sm-12 d-flex flex-row-reverse align-items-end pl-lg-5 my-3 py-0">
                    <button class="nss-btn-default ml-lg-5 w-100 text-center" v-on:click="searchOrders">Search</button>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column p-4 bg-white-shadow">
            <div class="d-flex flex-row justify-content-between mb-3">
                <div>
                    <ul class="nav nav-pills mb-1" id=pills-tab role="tablist">
                        <li class=nav-item role="presentation" style=margin-right:.3em>
                            <a class="nav-link active" id=pills-home-tab data-toggle=pill
                               href=#pills-home role=tab aria-controls=pills-home
                               aria-selected=true v-on:click="isClosed = false; searchOrders();">Open Orders</a>
                        <li class=nav-item role="presentation">
                            <a class=nav-link id=pills-profile-tab
                               data-toggle=pill href=#pills-profile role=tab
                               aria-controls=pills-profile aria-selected=false v-on:click="isClosed = true; searchOrders();">Closed Orders</a>
                    </ul>
                </div>
                <label class="h4-primary"><img src="~/Themes/@(themeName)/Content/assets/icn-download.svg" alt="">Export</label>
            </div>
            <div id="order-grid"></div>
        </div>
    </div>
</div>

<script>
    var vm = new Vue({
        el: '#orders',
        data: {
            isSearchOpen: true,
            isClosed: false,
            invoiceId: null,
            fromDate: null,
            toDate: null,
            poNo: null,
        },
        mounted: function () {
            this.searchOrders();
        },
        methods: {
            searchOrders: function () {
                const request = {
                    orderId: this.orderId,
                    fromDate: this.fromDate,
                    toDate: this.toDate,
                    pONo: this.poNo,
                    isClosed: this.isClosed,
                };
                $.ajax({
                    url: "@Url.Action("SearchCompanyOrders", "OrderOverride")",
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(request),
                    success: function (data) {
                        if(data != null) {
                            $('#order-grid').html(data);
                        }
                    },
                    error: function (xhr, thrownError) {
                        console.log(thrownError, 'datadata-error', xhr);
                        $('#order-grid').html('an error has occured here');
                    }
                });
            }
        },
    });
</script>
<ejs-scripts></ejs-scripts>